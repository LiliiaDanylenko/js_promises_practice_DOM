{"version":3,"sources":["scripts/main.js"],"names":["createMessage","nameClass","message","document","body","insertAdjacentHTML","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","createPromise","ev","then","result","catch","error","secondPromiseLeft","secondPromiseRight","all"],"mappings":";AAAA,aAEA,SAASA,EAAcC,EAAWC,GAChCC,SAASC,KAAKC,mBAAmB,aACMJ,4CAAAA,OAAAA,EACjCC,cAAAA,OAAAA,EAFN,qBAOF,IAAMI,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCN,SAASO,iBAAiB,QAAS,WACjCF,EAAQ,gCAGVG,WAAW,WAAMF,OAAAA,EAAO,IAAIG,MAAM,gCAAgC,OAG9DC,EAAgB,IAAIN,QAAQ,SAACC,GACjCL,SAASO,iBAAiB,QAAS,WACjCF,EAAQ,iCAGVL,SAASO,iBAAiB,cAAe,WACvCF,EAAQ,mCAWZ,SAASM,EAAcC,EAAIb,GAClB,OAAA,IAAIK,QAAQ,SAACC,GAClBL,SAASO,iBAAiBK,EAAI,WAC5BP,EAAQN,OAVdI,EACGU,KAAK,SAAAC,GAAUjB,OAAAA,EAAc,UAAWiB,KACxCC,MAAM,SAAAC,GAASnB,OAAAA,EAAc,UAAWmB,EAAMjB,WAEjDW,EACGG,KAAK,SAAAC,GAAUjB,OAAAA,EAAc,UAAWiB,KAU3C,IAAMG,EAAoBN,EAAc,QACtC,oCACIO,EAAqBP,EAAc,cACvC,qCAEFP,QAAQe,IAAI,CAACF,EAAmBC,IAC7BL,KAAK,WAAMhB,OAAAA,EAAc,UAAW","file":"main.afcf7c9a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction createMessage(nameClass, message) {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div data-qa=\"notification\" class=\"${nameClass}\">\n      ${message}\n    </div>\n  `);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => reject(new Error('First promise was rejected')), 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nfirstPromise\n  .then(result => createMessage('success', result))\n  .catch(error => createMessage('warning', error.message));\n\nsecondPromise\n  .then(result => createMessage('success', result));\n\nfunction createPromise(ev, message) {\n  return new Promise((resolve) => {\n    document.addEventListener(ev, () => {\n      resolve(message);\n    });\n  });\n}\n\nconst secondPromiseLeft = createPromise('click',\n  'Second promise was resolved left');\nconst secondPromiseRight = createPromise('contextmenu',\n  'Second promise was resolved right');\n\nPromise.all([secondPromiseLeft, secondPromiseRight])\n  .then(() => createMessage('success', 'Third promise was resolved'));\n"]}